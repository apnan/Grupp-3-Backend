# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Main

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  tests:
    runs-on: ubuntu-latest
    env:
      MONGO: mongodb://localhost:27017
    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
        mongodb-version: ['4.2', '4.4', '5.0', '6.0']
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.8.0
        with:
          mongodb-version: ${{ matrix.mongodb-version }}
      - run: npm ci
      - run: npm run build --if-present
      - run: npm run integrationtest
      - run: npm run componenttest

      - name: Step To run on failure
        if: ${{ failure() }}
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}

        uses: Ilshidur/action-discord@0.3.2
        with:
          args: 'A new commit has been pushed to Grupp-3-Backend repository. All tests are passed'

  notify:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Discord tests notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}

        uses: Ilshidur/action-discord@0.3.2
        with:
          args: 'A new commit has been pushed to Grupp-3-Backend repository. All tests are passed'
      - name: Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@0.3.2

  deploy:
    needs: notify
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12
        with:
          branch: 'main'
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: 'grupp-3-backend'
          heroku_email: ${{secrets.HEROKU_EMAIL}}

  deployment-notify:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}

        uses: Ilshidur/action-discord@0.3.2
        with:
          args: 'App has been successfully deployed to Heroku'
